{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNjpqWmzj0a2PhM62lRi7m1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/fabiobaroliveira/analises/blob/main/gerando_tabela_dados_ficticios\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install faker"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0J0aYBkOUWun",
        "outputId": "061626d8-ee8d-4a93-9458-5825e624caec"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting faker\n",
            "  Downloading Faker-36.1.1-py3-none-any.whl.metadata (15 kB)\n",
            "Requirement already satisfied: tzdata in /usr/local/lib/python3.11/dist-packages (from faker) (2025.1)\n",
            "Downloading Faker-36.1.1-py3-none-any.whl (1.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.9/1.9 MB\u001b[0m \u001b[31m20.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: faker\n",
            "Successfully installed faker-36.1.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "YsrHBrXwFVrS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 721
        },
        "outputId": "f3262c18-d1ed-44fe-89a6-eabb3e05fa65"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       ID            Nome Completo  Idade             CPF       Sexo  \\\n",
              "0       1       Luiz Henrique Lima     36  394.217.805-23  Masculino   \n",
              "1       2            Elisa Sampaio     25  478.236.059-29   Feminino   \n",
              "2       3         Alexia Rodrigues     65  026.149.537-25   Feminino   \n",
              "3       4           Asafe Siqueira     43  725.068.943-65  Masculino   \n",
              "4       5          Benjamin Vargas     49  327.086.491-40  Masculino   \n",
              "..    ...                      ...    ...             ...        ...   \n",
              "995   996     Stephany Casa Grande     32  914.572.863-19   Feminino   \n",
              "996   997            Thiago Macedo     61  602.195.374-61  Masculino   \n",
              "997   998             Felipe Cunha     37  013.495.628-15  Masculino   \n",
              "998   999            Antony Cirino     59  724.985.610-30  Masculino   \n",
              "999  1000  Maria Luiza Vasconcelos     37  895.362.741-91   Feminino   \n",
              "\n",
              "                           E-mail             Telefone            Cidade  \\\n",
              "0            thiago72@example.net      (051) 3811 5841         Rodrigues   \n",
              "1         ramosdanilo@example.org     +55 71 1973-8026  Santos de Garcia   \n",
              "2      teixeirathomas@example.com  +55 (051) 0938-1025            Novais   \n",
              "3       benicioda-paz@example.net         11 6928-0963   Rios das Flores   \n",
              "4            felipe92@example.com         51 9383 8161     Lima Paulista   \n",
              "..                            ...                  ...               ...   \n",
              "995           ssantos@example.org         84 1710 7084           Azevedo   \n",
              "996            luan62@example.org        0500 294 8326       Sales Verde   \n",
              "997        vianasofia@example.org         61 0533-9848     Farias Grande   \n",
              "998    da-costabianca@example.net         81 9106-8924            Mendes   \n",
              "999  rodriguescecilia@example.net      (071) 0734-1509  Rodrigues Grande   \n",
              "\n",
              "    Estado       Marca    Modelo  Ano_fabricacao       Cor  Valor_venda  \\\n",
              "0       GO  Volskwagen       Gol            2020     Verde     58512.71   \n",
              "1       MG     Peugeot      3008            2014  Vermelho    114928.69   \n",
              "2       RN        Fiat      Argo            2020     Preto    249497.57   \n",
              "3       DF   Chevrolet   Tracker            2019     Prata    238107.69   \n",
              "4       GO   Chevrolet      Onix            2021     Cinza    167805.52   \n",
              "..     ...         ...       ...             ...       ...          ...   \n",
              "995     RO  Volskwagen   Saveiro            2022     Cinza    192027.40   \n",
              "996     PB  Volskwagen   Saveiro            2022     Cinza    141344.96   \n",
              "997     DF        Fiat      Toro            2021     Verde     34009.24   \n",
              "998     SE        Jeep  Renegade            2017      Azul    165580.83   \n",
              "999     SC     Hyundai     Creta            2022  Vermelho     85556.64   \n",
              "\n",
              "     Data_venda Forma_pagamento  \n",
              "0    2024-07-30         Leasing  \n",
              "1    2023-03-05         Leasing  \n",
              "2    2023-09-04         À vista  \n",
              "3    2024-02-12       Consórcio  \n",
              "4    2024-10-13       Consórcio  \n",
              "..          ...             ...  \n",
              "995  2024-10-06         À vista  \n",
              "996  2024-06-24         Leasing  \n",
              "997  2023-03-09         À vista  \n",
              "998  2023-07-03         À vista  \n",
              "999  2024-04-26   Financiamento  \n",
              "\n",
              "[1000 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a1af329d-27b3-4931-956a-132fd8cb0317\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Nome Completo</th>\n",
              "      <th>Idade</th>\n",
              "      <th>CPF</th>\n",
              "      <th>Sexo</th>\n",
              "      <th>E-mail</th>\n",
              "      <th>Telefone</th>\n",
              "      <th>Cidade</th>\n",
              "      <th>Estado</th>\n",
              "      <th>Marca</th>\n",
              "      <th>Modelo</th>\n",
              "      <th>Ano_fabricacao</th>\n",
              "      <th>Cor</th>\n",
              "      <th>Valor_venda</th>\n",
              "      <th>Data_venda</th>\n",
              "      <th>Forma_pagamento</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Luiz Henrique Lima</td>\n",
              "      <td>36</td>\n",
              "      <td>394.217.805-23</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>thiago72@example.net</td>\n",
              "      <td>(051) 3811 5841</td>\n",
              "      <td>Rodrigues</td>\n",
              "      <td>GO</td>\n",
              "      <td>Volskwagen</td>\n",
              "      <td>Gol</td>\n",
              "      <td>2020</td>\n",
              "      <td>Verde</td>\n",
              "      <td>58512.71</td>\n",
              "      <td>2024-07-30</td>\n",
              "      <td>Leasing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Elisa Sampaio</td>\n",
              "      <td>25</td>\n",
              "      <td>478.236.059-29</td>\n",
              "      <td>Feminino</td>\n",
              "      <td>ramosdanilo@example.org</td>\n",
              "      <td>+55 71 1973-8026</td>\n",
              "      <td>Santos de Garcia</td>\n",
              "      <td>MG</td>\n",
              "      <td>Peugeot</td>\n",
              "      <td>3008</td>\n",
              "      <td>2014</td>\n",
              "      <td>Vermelho</td>\n",
              "      <td>114928.69</td>\n",
              "      <td>2023-03-05</td>\n",
              "      <td>Leasing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Alexia Rodrigues</td>\n",
              "      <td>65</td>\n",
              "      <td>026.149.537-25</td>\n",
              "      <td>Feminino</td>\n",
              "      <td>teixeirathomas@example.com</td>\n",
              "      <td>+55 (051) 0938-1025</td>\n",
              "      <td>Novais</td>\n",
              "      <td>RN</td>\n",
              "      <td>Fiat</td>\n",
              "      <td>Argo</td>\n",
              "      <td>2020</td>\n",
              "      <td>Preto</td>\n",
              "      <td>249497.57</td>\n",
              "      <td>2023-09-04</td>\n",
              "      <td>À vista</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Asafe Siqueira</td>\n",
              "      <td>43</td>\n",
              "      <td>725.068.943-65</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>benicioda-paz@example.net</td>\n",
              "      <td>11 6928-0963</td>\n",
              "      <td>Rios das Flores</td>\n",
              "      <td>DF</td>\n",
              "      <td>Chevrolet</td>\n",
              "      <td>Tracker</td>\n",
              "      <td>2019</td>\n",
              "      <td>Prata</td>\n",
              "      <td>238107.69</td>\n",
              "      <td>2024-02-12</td>\n",
              "      <td>Consórcio</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Benjamin Vargas</td>\n",
              "      <td>49</td>\n",
              "      <td>327.086.491-40</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>felipe92@example.com</td>\n",
              "      <td>51 9383 8161</td>\n",
              "      <td>Lima Paulista</td>\n",
              "      <td>GO</td>\n",
              "      <td>Chevrolet</td>\n",
              "      <td>Onix</td>\n",
              "      <td>2021</td>\n",
              "      <td>Cinza</td>\n",
              "      <td>167805.52</td>\n",
              "      <td>2024-10-13</td>\n",
              "      <td>Consórcio</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>996</td>\n",
              "      <td>Stephany Casa Grande</td>\n",
              "      <td>32</td>\n",
              "      <td>914.572.863-19</td>\n",
              "      <td>Feminino</td>\n",
              "      <td>ssantos@example.org</td>\n",
              "      <td>84 1710 7084</td>\n",
              "      <td>Azevedo</td>\n",
              "      <td>RO</td>\n",
              "      <td>Volskwagen</td>\n",
              "      <td>Saveiro</td>\n",
              "      <td>2022</td>\n",
              "      <td>Cinza</td>\n",
              "      <td>192027.40</td>\n",
              "      <td>2024-10-06</td>\n",
              "      <td>À vista</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>997</td>\n",
              "      <td>Thiago Macedo</td>\n",
              "      <td>61</td>\n",
              "      <td>602.195.374-61</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>luan62@example.org</td>\n",
              "      <td>0500 294 8326</td>\n",
              "      <td>Sales Verde</td>\n",
              "      <td>PB</td>\n",
              "      <td>Volskwagen</td>\n",
              "      <td>Saveiro</td>\n",
              "      <td>2022</td>\n",
              "      <td>Cinza</td>\n",
              "      <td>141344.96</td>\n",
              "      <td>2024-06-24</td>\n",
              "      <td>Leasing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>998</td>\n",
              "      <td>Felipe Cunha</td>\n",
              "      <td>37</td>\n",
              "      <td>013.495.628-15</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>vianasofia@example.org</td>\n",
              "      <td>61 0533-9848</td>\n",
              "      <td>Farias Grande</td>\n",
              "      <td>DF</td>\n",
              "      <td>Fiat</td>\n",
              "      <td>Toro</td>\n",
              "      <td>2021</td>\n",
              "      <td>Verde</td>\n",
              "      <td>34009.24</td>\n",
              "      <td>2023-03-09</td>\n",
              "      <td>À vista</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>999</td>\n",
              "      <td>Antony Cirino</td>\n",
              "      <td>59</td>\n",
              "      <td>724.985.610-30</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>da-costabianca@example.net</td>\n",
              "      <td>81 9106-8924</td>\n",
              "      <td>Mendes</td>\n",
              "      <td>SE</td>\n",
              "      <td>Jeep</td>\n",
              "      <td>Renegade</td>\n",
              "      <td>2017</td>\n",
              "      <td>Azul</td>\n",
              "      <td>165580.83</td>\n",
              "      <td>2023-07-03</td>\n",
              "      <td>À vista</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>999</th>\n",
              "      <td>1000</td>\n",
              "      <td>Maria Luiza Vasconcelos</td>\n",
              "      <td>37</td>\n",
              "      <td>895.362.741-91</td>\n",
              "      <td>Feminino</td>\n",
              "      <td>rodriguescecilia@example.net</td>\n",
              "      <td>(071) 0734-1509</td>\n",
              "      <td>Rodrigues Grande</td>\n",
              "      <td>SC</td>\n",
              "      <td>Hyundai</td>\n",
              "      <td>Creta</td>\n",
              "      <td>2022</td>\n",
              "      <td>Vermelho</td>\n",
              "      <td>85556.64</td>\n",
              "      <td>2024-04-26</td>\n",
              "      <td>Financiamento</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1000 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1af329d-27b3-4931-956a-132fd8cb0317')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a1af329d-27b3-4931-956a-132fd8cb0317 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a1af329d-27b3-4931-956a-132fd8cb0317');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-772f579e-2a8e-4e19-8369-f5dd23295de7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-772f579e-2a8e-4e19-8369-f5dd23295de7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-772f579e-2a8e-4e19-8369-f5dd23295de7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_624dc74f-5712-4b7c-be3e-83d8088c6cac\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_vendas')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_624dc74f-5712-4b7c-be3e-83d8088c6cac button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_vendas');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_vendas",
              "summary": "{\n  \"name\": \"df_vendas\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 1,\n        \"max\": 1000,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          522,\n          738,\n          741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nome Completo\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 981,\n        \"samples\": [\n          \"Alice Mendon\\u00e7a\",\n          \"Yuri Cardoso\",\n          \"Enzo Gabriel Alves\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 18,\n        \"max\": 70,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          53,\n          52,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPF\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"021.753.948-32\",\n          \"762.345.901-52\",\n          \"531.089.624-42\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sexo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Feminino\",\n          \"Masculino\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E-mail\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 995,\n        \"samples\": [\n          \"barbosasophia@example.org\",\n          \"fernandeszoe@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Telefone\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"+55 11 5497-2708\",\n          \"0300-947-3056\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cidade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 587,\n        \"samples\": [\n          \"Moreira de Cavalcanti\",\n          \"Le\\u00e3o Paulista\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estado\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"MA\",\n          \"PE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marca\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Citroen\",\n          \"Peugeot\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"Gol\",\n          \"Fit\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ano_fabricacao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2013,\n        \"max\": 2023,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          2018,\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Verde\",\n          \"Vermelho\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Valor_venda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62514.86993336463,\n        \"min\": 30002.29,\n        \"max\": 249595.24,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          155210.55,\n          214283.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data_venda\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-02-24\",\n        \"max\": \"2025-02-23\",\n        \"num_unique_values\": 546,\n        \"samples\": [\n          \"2023-03-03\",\n          \"2024-08-01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Forma_pagamento\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\u00c0 vista\",\n          \"Financiamento\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import random\n",
        "from faker import Faker\n",
        "fake = Faker('pt_BR')\n",
        "\n",
        "# Listas de valores possíveis\n",
        "\n",
        "marcas_modelos = {\n",
        "    \"Fiat\" : [ \"Mobi\",\"Argo\", \"Cronos\", \"500e\", \"Pulse\", \"Fastback\", \"Strada\", \"Toro\", \"Fiorino\"],\n",
        "    \"Volskwagen\" : [ \"Up\", \"Gol\", \"Voyage\", \"Saveiro\", \"Polo\", \"Virtus\", \"Nivus\", \"T-Cross\", \"Amarok\"],\n",
        "    \"Chevrolet\" : [ \"Onix\", \"Prisma\", \"Cruze\", \"Tracker\", \"S-10\", \"TrailBlazer\"],\n",
        "    \"Hyundai\" : [ \"HB20\", \"HB20S\", \"Creta\", \"Tucson\"],\n",
        "    \"Honda\" : [ \"Civic\", \"HR-V\", \"City\", \"Fit\", \"CR-V\"],\n",
        "    \"Toyota\" : [ \"Etios\",\"Yaris\",\"Corolla\", \"Camry\", \"Corolla Cross\", \"Hilux\"],\n",
        "    \"Ford\" : [ \"Ka\", \"Ka Sedan\", \"Ecosport\", \"Ranger\", \"Focus\", \"Territory\"],\n",
        "    \"Peugeot\" : [ \"208\" , \"308\", \"2008\", \"3008\", \"Partner\"],\n",
        "    \"Citroen\" : [ \"C3\", \"Aircross\", \"C4\", \"C4 Grand Picasso\", \"Basalt\"],\n",
        "    \"Jeep\" : [ \"Compass\", \"Renegade\", \"Wrangler\", \"Cherokee\"]\n",
        "}\n",
        "\n",
        "formas_pagamento = [\"À vista\", \"Financiamento\", \"Consórcio\", \"Leasing\"]\n",
        "\n",
        "cores = [\"Preto\", \"Branco\", \"Prata\", \"Vermelho\", \"Azul\", \"Verde\", \"Cinza\"]\n",
        "\n",
        "sexo_opcoes = [\"Masculino\", \"Feminino\"]\n",
        "\n",
        "# Gerando os dados fictícios\n",
        "\n",
        "dados = []\n",
        "\n",
        "for i in range(1, 1001):\n",
        "  sexo = random.choice(sexo_opcoes)\n",
        "  nome = fake.first_name_male() if sexo == \"Masculino\" else fake.first_name_female()\n",
        "  sobrenome = fake.last_name()\n",
        "  nome_completo = f\"{nome} {sobrenome}\"\n",
        "  idade = random.randint(18, 70)\n",
        "  cpf = fake.cpf()\n",
        "  email = fake.email()\n",
        "  telefone = fake.phone_number()\n",
        "  cidade = fake.city()\n",
        "  estado = fake.state_abbr()\n",
        "  marca = random.choice(list(marcas_modelos.keys()))\n",
        "  modelo = random.choice(marcas_modelos[marca])\n",
        "  ano_fabricacao = random.randint(2013, 2023)\n",
        "  cor = random.choice(cores)\n",
        "  valor_venda = round(random.uniform(30000, 250000), 2)\n",
        "  data_venda = fake.date_between(start_date=\"-2y\", end_date=\"today\")\n",
        "  forma_pagamento = random.choice(formas_pagamento)\n",
        "  dados.append([\n",
        "  i, nome_completo, idade, cpf, sexo, email, telefone, cidade, estado,\n",
        "  marca, modelo, ano_fabricacao, cor, valor_venda, data_venda, forma_pagamento\n",
        "  ])\n",
        "\n",
        "\n",
        "# Criando o DataFrame\n",
        "\n",
        "colunas = [\"ID\", \"Nome Completo\", \"Idade\", \"CPF\", \"Sexo\", \"E-mail\", \"Telefone\", \"Cidade\", \"Estado\", \"Marca\", \"Modelo\", \"Ano_fabricacao\", \"Cor\", \"Valor_venda\", \"Data_venda\", \"Forma_pagamento\"]\n",
        "\n",
        "df_vendas = pd.DataFrame(dados, columns=colunas)\n",
        "\n",
        "# Exibindo as primeiras linhas\n",
        "#df_vendas.head()\n",
        "display(df_vendas)\n"
      ]
    }
  ]
}